DROP DATABASE IF EXISTS `imdb`;
CREATE DATABASE `imdb` /*!40100 COLLATE 'utf8mb4_unicode_ci' */;
USE `imdb`;
CREATE TABLE `users` (
	`id` BIGINT(20) UNSIGNED NOT NULL AUTO_INCREMENT,
	`name` CHAR(50) NOT NULL,
	`phone` CHAR(15) NOT NULL,
	`email` CHAR(255) NOT NULL,
	`password` CHAR(255) NOT NULL,
	PRIMARY KEY (`id`),
	UNIQUE INDEX (`phone`),
	UNIQUE INDEX (`email`)
);
CREATE TABLE `tokens` (
	`token` CHAR(255) NOT NULL,
	`user` BIGINT(20) UNSIGNED NOT NULL,
	PRIMARY KEY (`token`),
	FOREIGN KEY (`user`) REFERENCES `users` (`id`) ON UPDATE CASCADE ON DELETE CASCADE
);
CREATE TABLE `movies` (
	`id` CHAR(15) NOT NULL,
	`title` CHAR(255) NOT NULL,
	`avatar` TEXT NOT NULL,
	`thumbnail` TEXT NOT NULL,
	`year` YEAR NOT NULL,
	`country` CHAR(60) NOT NULL,
	`rate` FLOAT UNSIGNED NOT NULL,
	`rank` TINYINT(3) UNSIGNED NOT NULL,
	PRIMARY KEY (`id`)
);
CREATE TABLE `comments` (
	`author` BIGINT(20) UNSIGNED NOT NULL,
	`movie` CHAR(15) NOT NULL,
	`time` DATETIME NOT NULL,
	`content` CHAR(255) NOT NULL,
	FOREIGN KEY (`author`) REFERENCES `users` (`id`) ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (`movie`) REFERENCES `movies` (`id`) ON UPDATE CASCADE ON DELETE CASCADE
);
CREATE TABLE `rates` (
	`user` BIGINT(20) UNSIGNED NOT NULL,
	`movie` CHAR(15) NOT NULL,
	`rate` FLOAT NOT NULL,
	FOREIGN KEY (`user`) REFERENCES `users` (`id`) ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (`movie`) REFERENCES `movies` (`id`) ON UPDATE CASCADE ON DELETE CASCADE
);
CREATE TABLE `favorites` (
	`user` BIGINT(20) UNSIGNED NOT NULL,
	`movie` CHAR(15) NOT NULL,
	PRIMARY KEY (`user`, `movie`),
	FOREIGN KEY (`movie`) REFERENCES `movies` (`id`) ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (`user`) REFERENCES `users` (`id`) ON UPDATE CASCADE ON DELETE CASCADE
);
CREATE TABLE `genres` (
	`genre` CHAR(15) NOT NULL,
	`movie` CHAR(15) NOT NULL,
	PRIMARY KEY (`genre`, `movie`),
	FOREIGN KEY (`movie`) REFERENCES `movies` (`id`) ON UPDATE CASCADE ON DELETE CASCADE
);